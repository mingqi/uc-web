{"version":3,"file":"search.min.js","sources":["log_pattern.js","uncompressed/search.js"],"names":["pattern","pattern_str","end_flag","ESCAPE","attributes","escape","filters","p","parse","parses","query","statment","term","terms","_i","_j","_len","_len1","_ref","str","e","length","replace","_attrs","_p","_r","_results","exec","push","toExtract","attribute","toFilter","regexp","script","params","split","trim","indexOf","substring","concat","bool","must","multi_match","fields","toBucket","_k","_len2","lang","onlyNumber","size","toMetric","applyFilter","value","attr_wrap","new_pattern_str","angular","module","filter","bar","obj","hasOwnProperty","directive","scope","element","attrs","bind","event","which","$apply","$eval","ngEnter","preventDefault","controller","$scope","$http","defaults","headers","common","dateRange","$","val","_","extend","moment","parseInt","Math","currentPage","page","field","attributeAggs","keywords","key","name","autoRefresh","chartCount","id","chartStat","search","opts","isCustomerRange","match","alert","strBegin","RegExp","$1","strEnd","$2","begin","dateFormat","end","points","interval","timerange","range","timestamp","from","toISOString","to","filtered","and","each","object","highChart","showLoading","post","esBody","aggs","event_over_time","date_histogram","success","json","searchResult","buckets","aggregations","data","date","add","minus","bucket","doc_count","series","type","drawChart","setAutoRefresh","reserve","map","show","toggleAutoRefresh","toggleField","loading","unique_number_for_attributes","filterField","removeFieldFilter","showFieldKeys","modalFieldData","modal","toPage","scrollTo","chart","destroy","renderTo","zoomType","events","selection","format","Highcharts","xAxis","min","max","window","chosenLabel","trigger","credits","enabled","rangeSelector","navigator","scrollbar","legend","tooltip","valueDecimals","dateTimeLabelFormats","millisecond","second","minute","hour","day","week","month","year","ordinal","minRange","yAxis","floor","gridLineColor","plotOptions","marker","StockChart","container","setOptions","global","timezoneOffset","Date","getTimezoneOffset","weekdays","label","getDatePickerOpts","ranges","过去1小时","subtract","过去6小时","昨天","startOf","endOf","过去1天","过去1周","过去15天","过去2月","result","opens","timePicker","timePicker12Hour","timePickerIncrement","minDate","maxDate","locale","applyLabel","cancelLabel","fromLabel","toLabel","weekLabel","customRangeLabel","daysOfWeek","weekdaysMin","monthNames","monthsShort","firstDay","localeData","_week","dow","picker","startDate","endDate","datePickerOpts","daterangepicker","on","ev","setDateRange","refreshTimer","clearInterval","setInterval"],"mappings":"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","sourcesContent":["var pattern;\n\npattern = function(pattern_str, end_flag) {\n  var ESCAPE, attributes, escape, filters, p, parse, parses, query, statment, term, terms, _i, _j, _len, _len1, _ref;\n  ESCAPE = ['\\\\', '[', ']', '.', '^', '$', '|', '?', '*', '+', '(', ')', '{', '}'];\n  if (end_flag == null) {\n    end_flag = false;\n  }\n  escape = function(str) {\n    var e, _i, _len;\n    for (_i = 0, _len = ESCAPE.length; _i < _len; _i++) {\n      e = ESCAPE[_i];\n      str = str.replace(e, \"\\\\\" + e);\n    }\n    return str;\n  };\n  parse = function(statment, end_flag) {\n    var _attrs, _p, _r;\n    _p = /%(\\w+)%/g;\n    _attrs = (function() {\n      var _results;\n      _results = [];\n      while (_r = _p.exec(statment)) {\n        _results.push(_r[1]);\n      }\n      return _results;\n    })();\n    return {\n      attributes: _attrs,\n      toExtract: function(attribute) {\n        _r = escape(statment).replace(\"%\" + attribute + \"%\", \"(?<value>[a-zA-Z0-9_.-]+)\");\n        _r = _r.replace(_p, '[a-zA-Z0-9_.-]+');\n        return _r;\n      },\n      toFilter: function() {\n        var regexp;\n        regexp = escape(statment).replace(_p, '[a-zA-Z0-9_.-]+');\n        if (end_flag) {\n          regexp += '\\\\b';\n        }\n        return {\n          \"script\": {\n            \"script\": \"pattern_filter\",\n            \"params\": {\n              \"pattern\": regexp\n            }\n          }\n        };\n      }\n    };\n  };\n  if (!pattern_str) {\n    return {\n      query: null,\n      attributes: [],\n      filters: []\n    };\n  }\n  terms = [];\n  parses = [];\n  _ref = pattern_str.split('|');\n  for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n    statment = _ref[_i];\n    statment = statment.trim();\n    if (statment.indexOf('parse') === 0) {\n      parses.push(parse(statment.substring(5).trim(), end_flag));\n    } else {\n      terms = terms.concat(statment.split(/\\s+/));\n    }\n  }\n  if (terms.length === 0) {\n    query = null;\n  } else {\n    query = {\n      'bool': {\n        'must': (function() {\n          var _j, _len1, _results;\n          _results = [];\n          for (_j = 0, _len1 = terms.length; _j < _len1; _j++) {\n            term = terms[_j];\n            _results.push({\n              'multi_match': {\n                'query': term,\n                'fields': ['_all']\n              }\n            });\n          }\n          return _results;\n        })()\n      }\n    };\n  }\n  attributes = [];\n  filters = [];\n  for (_j = 0, _len1 = parses.length; _j < _len1; _j++) {\n    p = parses[_j];\n    attributes = attributes.concat(p.attributes);\n    filters.push(p.toFilter());\n  }\n  return {\n    query: query,\n    attributes: attributes,\n    filters: filters,\n    toBucket: function(attribute) {\n      var regexp, _k, _len2;\n      for (_k = 0, _len2 = parses.length; _k < _len2; _k++) {\n        p = parses[_k];\n        if (p.attributes.indexOf(attribute) >= 0) {\n          regexp = p.toExtract(attribute);\n          return {\n            \"script\": \"pattern_extract\",\n            \"lang\": \"groovy\",\n            \"params\": {\n              \"pattern\": regexp,\n              \"onlyNumber\": false\n            },\n            \"size\": 300\n          };\n        }\n      }\n      return null;\n    },\n    toMetric: function(attribute) {\n      var regexp, _k, _len2;\n      for (_k = 0, _len2 = parses.length; _k < _len2; _k++) {\n        p = parses[_k];\n        if (p.attributes.indexOf(attribute) >= 0) {\n          regexp = p.toExtract(attribute);\n          return {\n            \"script\": \"pattern_extract\",\n            \"lang\": \"groovy\",\n            \"params\": {\n              \"pattern\": regexp,\n              \"onlyNumber\": true\n            }\n          };\n        }\n      }\n      return null;\n    },\n    applyFilter: function(attribute, value) {\n      var attr_wrap, new_pattern_str;\n      attr_wrap = \"%\" + attribute + \"%\";\n      new_pattern_str = pattern_str.replace(attr_wrap, value);\n      if ((pattern_str.indexOf(attr_wrap) + attr_wrap.length) === pattern_str.length) {\n        return pattern(new_pattern_str, true);\n      } else {\n        return pattern(new_pattern_str, false);\n      }\n    }\n  };\n};\n","angular.module('consoleApp', ['tableSort'])\n.filter('isEmpty', function () {\n        var bar;\n        return function (obj) {\n            for (bar in obj) {\n                if (obj.hasOwnProperty(bar)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n})\n.directive('ngEnter', function () {\n    return function (scope, element, attrs) {\n        element.bind(\"keydown keypress\", function (event) {\n            if(event.which === 13) {\n                scope.$apply(function (){\n                    scope.$eval(attrs.ngEnter);\n                });\n \n                event.preventDefault();\n            }\n        });\n    };\n})\n.controller('Ctrl', ['$scope', '$http', '$location', function($scope, $http, $location) {\n    $http.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n    $scope.dateRange = $('#daterange').val();\n    _.extend($scope, {\n      _: _,\n      moment: moment,\n      parseInt: parseInt,\n      Math: Math,\n      currentPage: 1\n    })\n    $scope.page = {\n      filter: {\n        field: {}\n      },\n      attributeAggs: 'avg',\n      keywords: ''\n    };\n    $scope.fields = [{\n      key: 'host',\n      name: '主机名称'\n    }, {\n      key: 'path',\n      name: '路径'\n    }];\n    $scope.autoRefresh = true;\n    $scope.chartCount = {\n      id: 'chartCount'\n    };\n    $scope.chartStat = {\n      id: 'chartStat'\n    }\n\n    $scope.search = function(opts) {\n        // opts: reserve\n        opts = opts || {};\n\n        $scope.currentPage = 1;\n        if (isCustomerRange()) {\n          $scope.autoRefresh = false;\n        }\n        if (!$scope.dateRange.match(/^(\\S+) - (\\S+)$/)) {\n            alert(\"时间格式错误\")\n        }\n        var strBegin = RegExp.$1;\n        var strEnd = RegExp.$2;\n        var begin = $scope.begin = +moment(strBegin, dateFormat);\n        var end = $scope.end = +moment(strEnd, dateFormat);\n        _.extend($scope.chartCount, {\n            begin: begin,\n            end: end\n        });\n\n        $scope.page.pattern = pattern($scope.page.keywords);\n\n        var points = 30;\n        var interval = $scope.interval = parseInt((end-begin)/points);\n        $scope.page.filter.timerange = {\n          range: {\n                timestamp: {\n                  from: moment(begin).toISOString(),\n                  to:  moment(end).toISOString()\n                }\n          }\n        }\n        $scope.page.query = {\n          filtered: {\n            query: $scope.page.pattern.query,\n            filter: {\n              and: [$scope.page.filter.timerange]\n            }\n          }\n        };\n        _.each($scope.page.filter.field, function(value, field) {\n          $scope.page.query.filtered.filter.and.push({\n            term: _.object([[field, value]])\n          });\n        });\n        _.each($scope.page.pattern.filters, function(filter) {\n          $scope.page.query.filtered.filter.and.push(filter);\n        });\n\n        if ($scope.chartCount.highChart) {\n            $scope.chartCount.highChart.showLoading();\n        }\n\n        $http.post(\"/console/ajax/search\", {\n          esBody: {\n            query: $scope.page.query,\n            size: 100,\n            aggs: {\n              \"event_over_time\": {\n                \"date_histogram\": {\n                  \"field\": \"timestamp\",\n                  \"interval\": interval + \"ms\"\n                }\n              }\n            }\n          },\n          begin: begin,\n          end: end\n        }).success(function(json) {\n          $scope.page.searchResult = json;\n          var buckets = json.aggregations ? json.aggregations.event_over_time.buckets : [];\n          var data = [];\n          if (buckets.length == 0) {\n            for (var date = begin; date <= end; date += interval) {\n              data.push([date, 0]);\n            }\n          } else {\n            var add = (buckets[0].key - begin) % interval;\n            var minus = (end - buckets[0].key) % interval;\n            var from = begin + add;\n            var to = end - minus;\n\n            if (from < buckets[0].key) {\n              data.push([from, 0]);\n            }\n            _.each(buckets, function(bucket) {\n              data.push([bucket.key, bucket.doc_count]);\n            });\n            if (buckets.length>1 && to > buckets[buckets.length-1].key) {\n              data.push([to, 0]);\n            }\n          }\n\n          var series = [{\n            name: '数量',\n            type: 'column',\n            data: data\n          }];\n          drawChart($scope.chartCount, series);\n          setAutoRefresh();\n          \n          if (!opts.reserve) {\n              _.map($scope.fields, function(field) {\n                _.extend(field, {\n                  show: false,\n                  buckets: null\n                });\n              });\n          }\n        })\n    }\n\n    $scope.toggleAutoRefresh = function() {\n        if (!isCustomerRange()) {\n            $scope.autoRefresh = !$scope.autoRefresh    \n        }\n    };\n\n    $scope.toggleField = function(field) {\n      if (!field.buckets) {\n        field.loading = true;\n        $http.post(\"/console/ajax/search\", {\n          esBody: {\n            query: $scope.page.query,\n            size: 0,\n            aggs: {\n              unique_number_for_attributes: {\n                terms: {\n                  field: field.key,\n                  size: 300\n                }\n              }\n            }\n          },\n          begin: $scope.begin,\n          end: $scope.end\n        }).success(function(json) {\n          field.loading = false;\n          field.buckets = json.aggregations\n            ? json.aggregations.unique_number_for_attributes.buckets\n            : [];\n        });\n      }\n      field.show = !field.show;\n    };\n\n    $scope.filterField = function(field, bucket) {\n      // field.key, bucket.key\n      $scope.page.filter.field[field.key] = bucket.key;\n      $scope.search({reserve:true});\n    }\n    $scope.removeFieldFilter = function(key) {\n      // field.key, bucket.key\n      delete $scope.page.filter.field[key]\n      $scope.search({reserve:true});\n    }\n    $scope.showFieldKeys = function(field) {\n      $scope.modalFieldData = {\n        field: field,\n        buckets: field.buckets\n      }\n      $('#modalAllFieldKeys').modal();\n    }\n\n    $scope.search();\n\n    $scope.toPage = function(page) {\n      if ($scope.currentPage == page) {\n        return;\n      }\n      $http.post(\"/console/ajax/search\", {\n          esBody: {\n            query: $scope.page.query,\n            size: 100,\n            from: (page - 1) * 100\n          },\n          begin: $scope.begin,\n          end: $scope.end\n      }).success(function(json) {\n          $scope.page.searchResult = json;\n          $scope.currentPage = page;\n          $.scrollTo('#resultList', 500);\n      })\n\n    }\n}]);\n\nvar drawChart = function(chart, series) {\n    if (chart.highChart) {\n        chart.highChart.destroy();\n    }\n    var opts = {\n        chart : {\n            renderTo : chart.id,\n            zoomType : 'x',\n            events: {\n                selection: function(event) {\n                    var format = '%Y-%m-%dT%H:%M:%S.%L';\n                    var begin = Highcharts.dateFormat(format, event.xAxis[0].min);\n                    var end = Highcharts.dateFormat(format, event.xAxis[0].max);\n                    window.chosenLabel = '自定义范围';\n                    $('#daterange').val(begin + ' - ' + end);\n                    $('#daterange').trigger('change');\n                }\n            }\n        },\n        credits : {\n            enabled : false\n        },\n        rangeSelector : {\n            enabled : false\n        },\n        navigator : {\n            enabled : false\n        },\n        scrollbar : {\n            enabled : false\n        },\n        legend : {\n            enabled : series.length > 1\n        },\n        series : series,\n        tooltip: {\n            valueDecimals: 0,\n            dateTimeLabelFormats: {\n              millisecond:\"%Y-%m-%dT%H:%M:%S.%L\",\n              second:\"%Y-%m-%dT%H:%M:%S.%L\",\n              minute:\"%Y-%m-%dT%H:%M\",\n              hour:\"%Y-%m-%dT%H:%M\",\n              day:\"%Y-%m-%dT%H:%M\",\n              week:\"Week from %A, %b %e, %Y\",\n              month:\"%B %Y\",\n              year:\"%Y\"\n            }\n        },\n        xAxis: {\n          ordinal: false,\n          minRange: 1000,\n          dateTimeLabelFormats: {\n            millisecond: '%H:%M:%S.%L',\n            second: '%H:%M:%S',\n            minute: '%H:%M',\n            hour: '%H:%M',\n            day: '%m.%e',\n            week: '%e. %b',\n            month: '%b \\'%y',\n            year: '%Y'\n          }\n        },\n        yAxis : {\n            floor : 0,\n            gridLineColor: '#EEE'\n        },\n        plotOptions: {\n            series: {\n                marker: {\n                    enabled: true\n                }\n            }\n        }\n    };\n    chart.highChart = new Highcharts.StockChart(opts);\n};\n\n$('[data-rel=tooltip]').tooltip({container: 'body'});\n\nHighcharts.setOptions({\n    global : {\n        timezoneOffset : new Date().getTimezoneOffset()\n    },\n    lang: {\n      weekdays: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\n      //shortMonths: _.map(_.range(12), function(i) {return (i+1)+\"月\"})\n      //shortMonths: ['1月','2月','3月','4月','5月','6月','7月','8月','9月','10月','11月','12月']\n    }\n});\n\nvar chosenLabel = '过去1小时';\nvar dateFormat = 'YYYY-MM-DDTHH:mm:ss.SSS';\n\nvar isCustomerRange = function(label) {\n    label = label || chosenLabel;\n    return label.indexOf('过去') === -1;\n};\n\nvar getDatePickerOpts = function() {\n    var ranges = {\n       '过去1小时': [moment().subtract(1, 'hour'), moment()],\n       '过去6小时': [moment().subtract(6, 'hour'), moment()],\n       '昨天': [moment().subtract(1, 'day').startOf('day'), moment().subtract(1, 'day').endOf('day')],\n       '过去1天': [moment().subtract(1, 'day'), moment()],\n       '过去1周': [moment().subtract(1, 'week'), moment()],\n       '过去15天': [moment().subtract(1, 'month'), moment()],\n       '过去2月': [moment().subtract(2, 'month'), moment()]\n    };\n    var result = {\n        opens: 'left',\n        timePicker: true,\n        timePicker12Hour: false,\n        timePickerIncrement: 15,\n        ranges: ranges,\n        format: dateFormat,\n        minDate: moment().subtract(15, 'day'),\n        minDate: moment().subtract(60, 'day'),\n        maxDate: moment(),\n        locale: {\n            applyLabel: '应用',\n            cancelLabel: '取消',\n            fromLabel: '从',\n            toLabel: '到',\n            weekLabel: 'W',\n            customRangeLabel: '自定义范围',\n            daysOfWeek: moment.weekdaysMin(),\n            monthNames: moment.monthsShort(),\n            firstDay: moment.localeData()._week.dow\n        }\n    };\n\n    if (isCustomerRange()) {\n        // start & end isn't change\n        var picker = $('#daterange').data('daterangepicker');\n        return _.extend(result, {\n            startDate: picker.startDate,\n            endDate: picker.endDate\n        });\n    }\n    \n    return _.extend(result, {\n        startDate: ranges[chosenLabel][0],\n        endDate: ranges[chosenLabel][1],\n    });\n};\n\nvar datePickerOpts = getDatePickerOpts();\n$('#daterange').daterangepicker(datePickerOpts);\n\n$('#daterange').on('apply.daterangepicker', function(ev, picker) {\n    if (isCustomerRange() && !isCustomerRange(picker.chosenLabel)) {\n        // customer -> (not customer)\n        var $scope = angular.element($(\"body\")).scope();\n        $scope.autoRefresh = true;\n    }\n    chosenLabel = picker.chosenLabel;\n    $('#daterange').trigger('change');\n});\n\nvar setDateRange = function() {\n    $('#daterange').val(moment(datePickerOpts.startDate).format(dateFormat) + \" - \"\n            + moment(datePickerOpts.endDate).format(dateFormat));\n    $('#daterange').trigger('apply.daterangepicker', $('#daterange').data('daterangepicker'));\n};\nsetDateRange();\n\nvar setAutoRefresh = function() {\n    if (window.refreshTimer) {\n        clearInterval(window.refreshTimer);\n    }\n    window.refreshTimer = setInterval(function() {\n        var $scope = angular.element($(\"body\")).scope();\n        if (!$scope.autoRefresh) {\n            return;\n        }\n\n        datePickerOpts = getDatePickerOpts();\n        $('#daterange').data('daterangepicker').setOptions(datePickerOpts);\n        setDateRange();\n    }, 1000 * 60);\n};\n"]}