<!DOCTYPE html>
<html lang="en" ng-app="consoleApp">
<head>
<title>日志分析</title>

{% include include/inhead %}

<link href="/assets/css/daterangepicker-1.3.7.css" rel="stylesheet" />
<script src="/s/angular/angular.min.js"></script>
<script>
angular.module('consoleApp', [])
.filter('isEmpty', function () {
        var bar;
        return function (obj) {
            for (bar in obj) {
                if (obj.hasOwnProperty(bar)) {
                    return false;
                }
            }
            return true;
        };
})
.filter('isNumbericAttribute', function() {
  return function(obj) {
    return _.every(obj.buckets, function(bucket) {
      return _.isNumber(bucket.key);
    });
  }
})
.directive('ngEnter', function () {
    return function (scope, element, attrs) {
        element.bind("keydown keypress", function (event) {
            if(event.which === 13) {
                scope.$apply(function (){
                    scope.$eval(attrs.ngEnter);
                });
 
                event.preventDefault();
            }
        });
    };
})
.controller('Ctrl', ['$scope', '$http', '$location', function($scope, $http, $location) {
    $http.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';
    $scope.dateRange = $('#daterange').val();
    _.extend($scope, {
      _: _,
      moment: moment,
      parseInt: parseInt,
      Math: Math,
      currentPage: 1
    })
    $scope.page = {
      filter: {
        field: {},
        attribute: {}
      },
      attributeAggs: 'avg',
      keywords: ''
    };
    $scope.fields = [{
      key: 'host',
      name: '主机名称'
    }, {
      key: 'path',
      name: '路径'
    }];
    $scope.autoRefresh = true;
    $scope.chartCount = {
      id: 'chartCount'
    };
    $scope.chartStat = {
      id: 'chartStat'
    }

    $scope.search = function(opts) {
        // opts: reserve
        opts = opts || {};

        $scope.currentPage = 1;
        if (!opts.reserve) {
          $scope.page.filter.attribute = {}; // 清空attribute filter
        }
        if (isCustomerRange()) {
          $scope.autoRefresh = false;
        }
        if (!$scope.dateRange.match(/^(\S+) - (\S+)$/)) {
            alert("时间格式错误")
        }
        var strBegin = RegExp.$1;
        var strEnd = RegExp.$2;
        var begin = $scope.begin = +moment(strBegin, dateFormat);
        var end = $scope.end = +moment(strEnd, dateFormat);
        _.extend($scope.chartCount, {
            begin: begin,
            end: end
        });

        $scope.page.pattern = pattern($scope.page.keywords);
        $scope.page.oriPattern = pattern($scope.page.keywords);

        //$scope.page.pattern.applyFilter(key1,.....)
        _.map($scope.page.filter.attribute, function(value, key) {
          $scope.page.pattern = $scope.page.pattern.applyFilter(key, value);
        });

        var points = 30;
        var interval = $scope.interval = parseInt((end-begin)/points);
        $scope.page.filter.timerange = {
          range: {
                timestamp: {
                  from: moment(begin).toISOString(),
                  to:  moment(end).toISOString()
                }
          }
        }
        $scope.page.query = {
          filtered: {
            query: $scope.page.pattern.query,
            filter: {
              and: [$scope.page.filter.timerange]
            }
          }
        };
        _.each($scope.page.filter.field, function(value, field) {
          $scope.page.query.filtered.filter.and.push({
            term: _.object([[field, value]])
          });
        });
        _.each($scope.page.pattern.filters, function(filter) {
          $scope.page.query.filtered.filter.and.push(filter);
        });

        if ($scope.chartCount.highChart) {
            $scope.chartCount.highChart.showLoading();
        }

        $http.post("/console/ajax/search", {
          query: $scope.page.query,
          size: 100,
          aggs: {
            "event_over_time": {
              "date_histogram": {
                "field": "timestamp",
                "interval": interval + "ms"
              }
            }
          }

        }).success(function(json) {
          $scope.page.searchResult = json;
          var buckets = json.aggregations.event_over_time.buckets;
          var data = [];
          if (buckets.length == 0) {
            for (var date = begin; date <= end; date += interval) {
              data.push([date, 0]);
            }
          } else {
            var add = (buckets[0].key - begin) % interval;
            var minus = (end - buckets[0].key) % interval;
            var from = begin + add;
            var to = end - minus;

            if (from < buckets[0].key) {
              data.push([from, 0]);
            }
            _.each(buckets, function(bucket) {
              data.push([bucket.key, bucket.doc_count]);
            });
            if (buckets.length>1 && to > buckets[buckets.length-1].key) {
              data.push([to, 0]);
            }
          }

          var series = [{
            name: '数量',
            type: 'column',
            data: data
          }];
          drawChart($scope.chartCount, series);

          
          if (!opts.reserve) {
              _.map($scope.fields, function(field) {
                _.extend(field, {
                  show: false,
                  buckets: null
                });
              });
          }
        })
    }

    $scope.toggleAutoRefresh = function() {
        if (!isCustomerRange()) {
            $scope.autoRefresh = !$scope.autoRefresh    
        }
    };

    $scope.toggleField = function(field) {
      if (!field.buckets) {
        field.loading = true;
        $http.post("/console/ajax/search", {
          "query": $scope.page.query,
          "aggs": {
            "unique_number_for_attributes": {
              "terms": {
                "field": field.key,
                "size": 300
              }
            }
          }
        }).success(function(json) {
          field.loading = false;
          field.buckets = json.aggregations.unique_number_for_attributes.buckets;
        });
      }
      field.show = !field.show;
    };

    $scope.filterField = function(field, bucket) {
      // field.key, bucket.key
      $scope.page.filter.field[field.key] = bucket.key;
      $scope.search({reserve:true});
    }
    $scope.removeFieldFilter = function(key) {
      // field.key, bucket.key
      delete $scope.page.filter.field[key]
      $scope.search({reserve:true});
    }
    $scope.filterAttribute = function(attr, bucket) {
      // field.key, bucket.key
      $scope.page.filter.attribute[attr.key] = bucket.key;
      $scope.search({
        reserve: true
      });
    }
    $scope.removeAttributeFilter = function(key) {
      delete $scope.page.filter.attribute[key]
      $scope.search({reserve:true});
    };

    $scope.showFieldKeys = function(field) {
      $scope.modalFieldData = {
        field: field,
        buckets: field.buckets
      }
      $('#modalAllFieldKeys').modal();
    }
    $scope.showAttributeKeys = function(attr) {
      $scope.modalAttributeData = {
        attribute: attr,
        buckets: attr.buckets
      }
      $('#modalAllAttributeKeys').modal();
    }

    $scope.search();

    $scope.toPage = function(page) {
      if ($scope.currentPage == page) {
        return;
      }
      $http.post("/console/ajax/search", {
          query: $scope.page.query,
          size: 100,
          from: (page - 1) * 100
      }).success(function(json) {
          $scope.page.searchResult = json;
          $scope.currentPage = page;
          $.scrollTo('#resultList', 500);
      })

    }
}]);

var drawChart = function(chart, series) {
    if (chart.highChart) {
        chart.highChart.destroy();
    }
    var opts = {
        chart : {
            renderTo : chart.id,
            zoomType : 'x',
            events: {
                selection: function(event) {
                    var format = '%Y-%m-%dT%H:%M:%S.%L';
                    var begin = Highcharts.dateFormat(format, event.xAxis[0].min);
                    var end = Highcharts.dateFormat(format, event.xAxis[0].max);
                    window.chosenLabel = 'Custom Range';
                    $('#daterange').val(begin + ' - ' + end);
                    $('#daterange').trigger('change');
                }
            }
        },
        credits : {
            enabled : false
        },
        rangeSelector : {
            enabled : false
        },
        navigator : {
            enabled : false
        },
        scrollbar : {
            enabled : false
        },
        legend : {
            enabled : series.length > 1
        },
        series : series,
        tooltip: {
            valueDecimals: 0,
            dateTimeLabelFormats: {
              millisecond:"%Y-%m-%dT%H:%M:%S.%L",
              second:"%Y-%m-%dT%H:%M:%S.%L",
              minute:"%Y-%m-%dT%H:%M",
              hour:"%Y-%m-%dT%H:%M",
              day:"%Y-%m-%dT%H:%M",
              week:"Week from %A, %b %e, %Y",
              month:"%B %Y",
              year:"%Y"
            }
        },
        xAxis: {
          ordinal: false,
          minRange: 1000,
          dateTimeLabelFormats: {
            millisecond: '%H:%M:%S.%L',
            second: '%H:%M:%S',
            minute: '%H:%M',
            hour: '%H:%M',
            day: '%m.%e',
            week: '%e. %b',
            month: '%b \'%y',
            year: '%Y'
          }
        },
        yAxis : {
            floor : 0,
            gridLineColor: '#EEE'
        },
        plotOptions: {
            series: {
                marker: {
                    enabled: true
                }
            }
        }
    };
    chart.highChart = new Highcharts.StockChart(opts);
};
</script>
</head>
<body ng-controller="Ctrl">
{% include include/navbar %}

<div class="main-container" id="main-container">
    <div class="main-container-inner">
        <a class="menu-toggler" id="menu-toggler" href="#">
            <span class="menu-text"></span>
        </a>

        <div class="sidebar" id="sidebar" style="height:0">
            <ul class="nav nav-list" ng-include="'navList'"></ul>
            <script type="text/ng-template" id="navList">
            <li>
              <a>
                  <i class="icon-none fa fa-search"></i>
                  <span class="menu-text">按条件过滤</span>
              </a>

              <ul class="submenu" style="display:block">
                <li ng-repeat="field in fields">
                  <a ng-click="toggleField(field)">
                      <i class="icon-none fa fa-angle-double-right"></i>
                      
                      {{field.name}}
                      <i class="fa fa-refresh fa-spin blue" ng-if="field.loading"></i>
                      <b class="arrow fa fa-angle-down"></b>
                  </a>
                    
                  <ul class="submenu" ng-class="{block: field.show}">
                      <li ng-if="field.buckets.length==0">
                        <a style="cursor: default;display: block;padding: 7px 0 9px 22px;">
                          没有结果
                        </a>
                      </li>
                      <li ng-repeat="bucket in field.buckets | limitTo:5">
                          <a ng-click="filterField(field, bucket)">
                              <i class="fa fa-angle-double-right"></i>
                              {{bucket.key}} ({{bucket.doc_count | number:0}})
                          </a>
                      </li>
                      <li ng-if="field.buckets.length>5">
                        <a class="text-right" style="padding-right:5px;" ng-click="showFieldKeys(field)">
                          
                          查看所有({{field.buckets.length}})
                          <i class="fa fa-angle-double-right"></i>
                        </a>
                      </li>
                  </ul>
                </li>
              </ul>
            </li>
            </script>
        </div>

        <div class="main-content">

            <div class="page-content">

              <div class="col-sm-5">
                  <div class="input-group">
                      <input class="form-control input-mask-date" type="text" ng-model="page.keywords" ng-enter="search()">
                      <span class="input-group-btn">
                          <button class="btn btn-sm btn-primary" type="button" ng-click="search()">
                              <i class="fa fa-search bigger-110"></i>
                              搜索
                          </button>
                      </span>
                  </div>
              </div>
              <div class="col-sm-5 pull-right">
                    <div class="input-prepend input-group pull-right" style="width:300px;">
                       <span class="add-on input-group-addon"><i class="glyphicon glyphicon-calendar fa fa-calendar"></i></span>
                       <input readonly type="text" style="width: 360px" id="daterange" ng-model="dateRange" ng-change="search()"/>
                       <span class="input-group-addon" data-rel="tooltip" data-placement="top" title="Auto Refresh" style="cursor: pointer" ng-click="toggleAutoRefresh()">
                          <i class="fa fa-circle" ng-class="{red:!autoRefresh, green:autoRefresh}"></i>
                       </span>
                    </div>
              </div>
              <div class="clearfix"></div>
              <hr/>

              <div ng-include="'pageConent'"></div>

            </div><!-- /.page-content -->
            <script type="text/ng-template" id="pageConent">
              <div ng-if="!(page.filter.field | isEmpty) || !(page.filter.attribute | isEmpty)">字段过滤：
                <span ng-repeat="(key, value) in page.filter.field">
                  <div class="label label-xlg label-gray">
                    <button type="button" class="close" ng-click="removeFieldFilter(key)">
                      <i class="fa fa-times" style="font-size: 13px;float: right;margin: 3px 0 0 5px;"></i>
                    </button>
                    {{key}}:{{value}}
                  </div>
                  &nbsp;
                </span>
                <span ng-repeat="(key, value) in page.filter.attribute">
                  <div class="label label-xlg label-gray">
                    <button type="button" class="close" ng-click="removeAttributeFilter(key)">
                      <i class="fa fa-times" style="font-size: 13px;float: right;margin: 3px 0 0 5px;"></i>
                    </button>
                    {{key}}:{{value}}
                  </div>
                  &nbsp;
                </span>

                <hr>
              </div>
              

              <div ng-if="page.searchResult">
                  <div class="col-sm-12">
                      <h4 style="margin-top:0">{{page.searchResult.hits.total | number:0}} 条记录</h4>
                  </div>
                  
                  <div class="clearfix"></div>
              </div>

              <div id="chartCount" style="height:250px; padding:1px;">
                  <div style="font-size:20px; padding-top:20px" class="text-center">Loading...</div>
              </div>

              <div id="resultList" style="overflow-x:auto" ng-if="page.searchResult">

                <table class="table table-striped table-bordered table-hover">
                  <thead>
                      <tr>
                          <th>时间</th>
                          <th>主机名称</th>
                          <th>路径</th>
                          <th>内容</th>
                      </tr>
                  </thead>

                  <tbody>
                      <tr ng-repeat="hit in page.searchResult.hits.hits">
                          <td style="white-space: nowrap;">
                            {{moment(moment.utc(hit._source.timestamp).toDate())
                              .format('YYYY-MM-DDTHH:mm:ss')}}</td>
                          <td>{{hit._source.host}}</td>
                          <td>{{hit._source.path}}</td>
                          <td>{{hit._source.message}}</td>
                      </tr>
                  </tbody>
                </table>

                <ul class="pagination">
                  <li ng-class="{active: currentPage==p+1}"
                    ng-repeat="p in _.range(Math.min(5, Math.ceil(page.searchResult.hits.total/100)))">
                    <a ng-click="toPage(p+1)">{{p+1}}</a>
                  </li>
                </ul>
              </div>
            </script>

        </div><!-- /.main-content -->

        
    </div><!-- /.main-container-inner -->

    <a href="#" id="btn-scroll-up" class="btn-scroll-up btn btn-sm btn-inverse">
        <i class="fa fa-angle-double-up icon-only bigger-110"></i>
    </a>
</div><!-- /.main-container -->

{% include include/footer %}

<div class="modal fade" id="modalAllFieldKeys">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <h4 class="modal-title">{{modalFieldData.field.key}}({{modalFieldData.buckets.length}})</h4>
        <div class="nav-search" style="top:15px; right:50px">
            <span class="input-icon">
                <input type="text" placeholder="Search" class="nav-search-input" ng-model="modalFieldData.filter" />
                <i class="fa fa-search nav-search-icon"></i>
            </span>
        </div>
      </div>
      <div class="modal-body">
        <table class="table table-striped table-bordered table-hover">
          <thead>
              <tr>
                  <th>值</th>
                  <th>数量</th>
              </tr>
          </thead>

          <tbody>
              <tr ng-repeat="bucket in modalFieldData.buckets | filter:modalFieldData.filter">
                  <td><a ng-click="filterField(modalFieldData.field, bucket)">{{bucket.key}}</a></td>
                  <td>{{bucket.doc_count}}</td>
              </tr>
          </tbody>
        </table>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div class="modal fade" id="modalAllAttributeKeys">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <h4 class="modal-title">{{modalAttributeData.attribute.key}}({{modalAttributeData.buckets.length}})</h4>
        <div class="nav-search" style="top:15px; right:50px">
            <span class="input-icon">
                <input type="text" placeholder="Search" class="nav-search-input" ng-model="modalAttributeData.filter" />
                <i class="fa fa-search nav-search-icon"></i>
            </span>
        </div>
      </div>
      <div class="modal-body">
        <table class="table table-striped table-bordered table-hover">
          <thead>
              <tr>
                  <th>值</th>
                  <th>数量</th>
              </tr>
          </thead>

          <tbody>
              <tr ng-repeat="bucket in modalAttributeData.buckets | filter:modalAttributeData.filter">
                  <td><a ng-click="filterAttribute(modalAttributeData.attribute, bucket)">{{bucket.key}}</a>
                  </td>
                  <td>{{bucket.doc_count}}</td>
              </tr>
          </tbody>
        </table>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<script src="/assets/js/date-time/moment.min.js"></script>
<script src="/assets/js/date-time/daterangepicker.js"></script>
<script src="/s/highstock.js"></script>
<script src="/s/log_pattern.js"></script>

<script>
$('[data-rel=tooltip]').tooltip({container: 'body'});

Highcharts.setOptions({
    global : {
        timezoneOffset : new Date().getTimezoneOffset()
    },
    lang: {
      weekdays: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],
      //shortMonths: _.map(_.range(12), function(i) {return (i+1)+"月"})
      //shortMonths: ['1月','2月','3月','4月','5月','6月','7月','8月','9月','10月','11月','12月']
    }
});

//var chosenLabel = 'Last 1 month';
var chosenLabel = 'demo';
var dateFormat = 'YYYY-MM-DDTHH:mm:ss.SSS';

var isCustomerRange = function(label) {
    label = label || chosenLabel;
    return label.indexOf('Last') === -1;
};

var getDatePickerOpts = function() {
    var ranges = {
       'Last 1 hour': [moment().subtract(1, 'hour'), moment()],
       'Last 6 hours': [moment().subtract(6, 'hour'), moment()],
       'Last 1 day': [moment().subtract(1, 'day'), moment()],
       'Last 1 week': [moment().subtract(1, 'week'), moment()],
       'Last 1 month': [moment().subtract(1, 'month'), moment()],
       'Last 3 month': [moment().subtract(3, 'month'), moment()],
       demo: [moment('2014-09-03T23:00:00.000Z'), moment('2014-09-05T00:00:00.000Z')],
       demo: [moment('2014-09-04T07:00:00.000Z'), moment('2014-09-04T08:00:00.000Z')]
    };
    var result = {
        opens: 'left',
        timePicker: true,
        timePicker12Hour: false,
        timePickerIncrement: 15,
        ranges: ranges,
        format: dateFormat,
        maxDate: moment()
    };
    var scope = angular.element($("body")).scope();

    if (isCustomerRange() && chosenLabel != 'demo') {
        // start & end isn't change
        var picker = $('#daterange').data('daterangepicker');
        return _.extend(result, {
            startDate: picker.startDate,
            endDate: picker.endDate
        });
    }
    
    return _.extend(result, {
        startDate: ranges[chosenLabel][0],
        endDate: ranges[chosenLabel][1],
    });
};

var datePickerOpts = getDatePickerOpts();
$('#daterange').daterangepicker(datePickerOpts);

$('#daterange').on('apply.daterangepicker', function(ev, picker) {
    if (isCustomerRange() && !isCustomerRange(picker.chosenLabel)) {
        // customer -> (not customer)
        var $scope = angular.element($("body")).scope();
        $scope.autoRefresh = true;
    }
    chosenLabel = picker.chosenLabel;
    $('#daterange').trigger('change');
});

var setDateRange = function() {
    $('#daterange').val(moment(datePickerOpts.startDate).format(dateFormat) + " - "
            + moment(datePickerOpts.endDate).format(dateFormat));
    $('#daterange').trigger('apply.daterangepicker', $('#daterange').data('daterangepicker'));
};
setDateRange();

var setAutoRefresh = function() {
    if (window.refreshTimer) {
        clearInterval(window.refreshTimer);
    }
    window.refreshTimer = setInterval(function() {
        datePickerOpts = getDatePickerOpts();
        if (!datePickerOpts) {
            return;
        }
        $('#daterange').data('daterangepicker').setOptions(datePickerOpts);
        setDateRange();
    }, 1000 * 61);
};
</script>
</body>
</html>
